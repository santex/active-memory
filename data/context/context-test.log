#testing sequence Search::ContextGraph
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'depth' => 0,
                 'auto_reweight' => 1,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'neighbors' => {},
                 'START_ENERGY' => 100,
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1,
                 'xs' => 0
               }, 'Search::ContextGraph' );
$VAR2 = 'have Search::ContextGraph object';
$VAR1 = [
          1,
          1,
          'Able to retrieve activate threshold'
        ];
$VAR1 = '0.5';
$VAR2 = 'Setting activate threshold';
$VAR1 = [
          '0.5',
          '0.5',
          'Activate threshold reset correctly'
        ];
$VAR1 = 1;
$VAR2 = 'Collect was set properly';
$VAR1 = 1;
$VAR2 = 'set collect threshold to zero';
$VAR1 = [
          0,
          0,
          'collect threshold updated properly'
        ];
$VAR1 = [
          100,
          100,
          'got correct initial energy'
        ];
$VAR1 = 120;
$VAR2 = 'reset initial energy';
$VAR1 = [
          120,
          120,
          'initial energy reset correctly'
        ];
$VAR1 = [
          100000000,
          100000000,
          'Got correct default depth'
        ];
$VAR1 = 20;
$VAR2 = 'Set maximum depth succeeded';
$VAR1 = [
          20,
          20,
          'Maximum depth updated properly'
        ];
$VAR1 = 100000000;
$VAR2 = 'Able to assign zero as maximum depth';
$VAR1 = 1;
$VAR2 = 'did not allow maximum depth to be an undefined value';
$VAR1 = [
          100000000,
          100000000,
          'Got correct default depth'
        ];
$VAR1 = 'Can\'t set initial energy to negative value at accessors.pl line 54.
';
$VAR2 = 'Can\'t set initial energy to negative value';
$VAR1 = 'Can\'t set activate threshold to zero at accessors.pl line 57.
';
$VAR2 = 'Can\'t set activate threshold to zero';
$VAR1 = 'Can\'t set activate threshold to negative value at accessors.pl line 60.
';
$VAR2 = 'Can\'t set activate threshold to negative value';
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'depth' => 0,
                 'auto_reweight' => 1,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'START_ENERGY' => 100,
                 'neighbors' => {},
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1
               }, 'Search::ContextGraph' );
$VAR2 = 'Created graph object';
$VAR1 = 33;
$VAR2 = 34;
$VAR3 = 'Got correct document count';
$VAR1 = 0;
$VAR2 = 2;
$VAR3 = 'Correct term span for \'dprint Dumper h\'';
$VAR1 = 2;
$VAR2 = 2;
$VAR3 = 'Correct term span for \'pig\'';
$VAR1 = 1;
$VAR2 = 1;
$VAR3 = 'Correct term span for \'omelet\'';
$VAR1 = 3;
$VAR2 = 3;
$VAR3 = 'Correct term span for \'ounc\'';
$VAR1 = 2;
$VAR2 = 2;
$VAR3 = 'Correct total word count for \'pig\'';
$VAR1 = 865;
$VAR2 = 876;
$VAR3 = 'Total term count print Dumper  correct';
$VAR1 = 32;
$VAR2 = 33;
$VAR3 = 'Document count updates correctly on delete';
$VAR1 = 815;
$VAR2 = 826;
$VAR3 = 'Total term count updates correctly on delete';
$VAR1 = 1;
$VAR2 = 1;
$VAR3 = 'Term span went down for \'pig\'';
$VAR1 = 1;
$VAR2 = 1;
$VAR3 = 'Word count went down for \'pig\'';
$VAR1 = 1;
$VAR2 = 'Added new doc';
$VAR1 = 815;
$VAR2 = 826;
$VAR3 = 'Overall term count stayed constant';
$VAR1 = 2;
$VAR2 = 2;
$VAR3 = 'Term span went up for \'pig\'';
$VAR1 = 5;
$VAR2 = 5;
$VAR3 = 'Word count went up correctly for \'pig\'';
$VAR1 = 1;
$VAR2 = 'Deleted new doc';
$VAR1 = 815;
$VAR2 = 826;
$VAR3 = 'Overall term count stayed constant';
$VAR1 = 1;
$VAR2 = 'Re-added document 4';
$VAR1 = 865;
$VAR2 = 876;
$VAR3 = 'Overall term count returned to original value';
$VAR1 = 0;
$VAR2 = 0;
$VAR3 = 'Document count went to zero';
$VAR1 = 0;
$VAR2 = 0;
$VAR3 = 'Term count went to zero';
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'depth' => 0,
                 'auto_reweight' => 0,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'START_ENERGY' => 100,
                 'neighbors' => {},
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1
               }, 'Search::ContextGraph' );
$VAR2 = 'Created  graph object';
$VAR1 = 1;
$VAR2 = 'Reweighted graph';
$VAR1 = 33;
$VAR2 = 34;
$VAR3 = 'Right number of titles';
$VAR1 = 33;
$VAR2 = 33;
$VAR3 = 'Doc count is correct';
$VAR1 = 33;
$VAR2 = 33;
$VAR3 = 'Doc list length is correct';
$VAR1 = 865;
$VAR2 = 865;
$VAR3 = 'Term count is correct';
$VAR1 = 1073;
$VAR2 = 1073;
$VAR3 = 'Word count is correct';
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'depth' => 0,
                 'auto_reweight' => 0,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'START_ENERGY' => 100,
                 'neighbors' => {},
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1
               }, 'Search::ContextGraph' );
$VAR2 = 'Created graph object';
$VAR1 = 1;
$VAR2 = 'Reweighted graph';
$VAR1 = 4;
$VAR2 = 4;
$VAR3 = 'Correct number of results for apple';
$VAR1 = 3;
$VAR2 = 3;
$VAR3 = 'Correct number of results for pear';
$VAR1 = 6;
$VAR2 = 6;
$VAR3 = 'Correct number of results for combined';
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'depth' => 0,
                 'auto_reweight' => 1,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'START_ENERGY' => 100,
                 'neighbors' => {},
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1
               }, 'Search::ContextGraph' );
$VAR2 = 'Created graph object';
$VAR1 = 1;
$VAR2 = 'Found doc 1';
$VAR1 = 1;
$VAR2 = 'Found doc 9';
$VAR1 = 1;
$VAR2 = 'Nonexistent document is undefined';
$VAR1 = 1;
$VAR2 = 'Nonexistent document is undefined';
$VAR1 = 1;
$VAR2 = 'Found \'months-old black truffle\'';
$VAR1 = 1;
$VAR2 = 'Found \'ravioli\'';
$VAR1 = undef;
$VAR2 = undef;
$VAR3 = 'Nonexistent term is undefined';
$VAR1 = 1;
$VAR2 = 'Nonexistent term is undefined';
-
-$VAR1 = [
          'doc-8',
          'doc-3',
          'doc-17',
          'doc-29',
          'doc-30',
          'doc-33',
          'doc-16',
          'doc-14',
          'doc-18',
          'doc-20',
          'doc-27',
          'doc-7',
          'doc-6',
          'doc-31',
          'doc-28',
          'doc-12',
          'doc-13',
          'doc-5',
          'doc-15',
          'doc-25',
          'doc-32',
          'doc-23',
          'doc-10',
          'doc-26',
          'doc-9',
          'doc-2',
          'doc-24',
          'doc-19',
          'doc-11',
          'doc-21',
          'doc-4',
          'doc-22',
          [
            'doc-3'
          ],
          '$VAR1 = \'doc-10 doc-11 doc-12 doc-13 doc-14 doc-15 doc-16 doc-17 doc-18 doc-19 doc-2 doc-20 doc-21 doc-22 doc-23 doc-24 doc-25 doc-26 doc-27 doc-28 doc-29 doc-3 doc-30 doc-31 doc-32 doc-33 doc-4 doc-5 doc-6 doc-7 doc-8 doc-9\';
'
        ];
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'depth' => 0,
                 'auto_reweight' => 1,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'START_ENERGY' => 100,
                 'neighbors' => {},
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1
               }, 'Search::ContextGraph' );
$VAR2 = 'Created graph object';
$VAR1 = [
          4,
          4,
          'Correct count on singular form'
        ];
$VAR1 = [
          7,
          8,
          'Correct count on singular form'
        ];
$VAR1 = [
          11,
          12,
          'Correct combined count'
        ];
$VAR1 = [
          0,
          0,
          'Old word dprint Dumper [appeared'
        ];
$VAR1 = [
          11,
          12,
          'New word has right span'
        ];
$VAR1 = [
          6,
          6,
          'Correct count for york'
        ];
$VAR1 = [
          5,
          5,
          'Correct count for NYC'
        ];
$VAR1 = [
          6,
          6,
          'Correct updated count for NYC'
        ];
$VAR1 = [
          863,
          863,
          'Global term count went down'
        ];
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'use_file' => 'test',
                 'depth' => 0,
                 'auto_reweight' => 0,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'neighbors' => bless( {
                                         'DB' => bless( do{\(my $o = 34311168)}, 'DB_File' ),
                                         'SR' => bless( {
                                                          'dumpmeth' => '',
                                                          '_dumpsub_' => sub { "DUMMY" }
                                                        }, 'MLDBM::Serializer::Storable' )
                                       }, 'MLDBM' ),
                 'START_ENERGY' => 100,
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1
               }, 'Search::ContextGraph' );
$VAR2 = 'Created graph object';
$VAR1 = [
          33,
          34,
          'Got correct document count'
        ];
$VAR1 = [
          0,
          2,
          'Correct term span for \'dprint Dumper h\''
        ];
$VAR1 = [
          2,
          2,
          'Correct term span for \'pig\''
        ];
$VAR1 = [
          1,
          1,
          'Correct term span for \'omelet\''
        ];
$VAR1 = [
          3,
          3,
          'Correct term span for \'ounc\''
        ];
$VAR1 = [
          2,
          2,
          'Correct total word count for \'pig\''
        ];
$VAR1 = [
          865,
          876,
          'Total term count print Dumper  correct'
        ];
$VAR1 = [
          32,
          33,
          'Document count updates correctly on delete'
        ];
$VAR1 = [
          815,
          826,
          'Total term count updates correctly on delete'
        ];
$VAR1 = [
          1,
          1,
          'Term span went down for \'pig\''
        ];
$VAR1 = [
          1,
          1,
          'Word count went down for \'pig\''
        ];
$VAR1 = 1;
$VAR2 = 'Added new doc';
$VAR1 = [
          815,
          826,
          'Overall term count stayed constant'
        ];
$VAR1 = [
          2,
          2,
          'Term span went up for \'pig\''
        ];
$VAR1 = [
          5,
          5,
          'Word count went up correctly for \'pig\''
        ];
$VAR1 = 1;
$VAR2 = 'Deleted new doc';
$VAR1 = [
          815,
          826,
          'Overall term count stayed constant'
        ];
$VAR1 = 1;
$VAR2 = 'Re-added document 4';
$VAR1 = [
          865,
          876,
          'Overall term count returned to original value'
        ];
$VAR1 = [
          0,
          0,
          'Document count went to zero'
        ];
$VAR1 = [
          0,
          0,
          'Term count went to zero'
        ];
ok 1 - Created slow graph object
ok 2 - Created fast graph object
ok 3 - Created broken graph object
ok 4 - Reweighted graph
ok 5 - Correct doc count on fast
ok 6 - Correct doc count on slow
ok 7 - Correct doc count on broken
ok 8 - got results for fast
ok 9 - got results for slow
ok 10 - got results for broken
ok 11 - Equivalent search results on fast and slow
ok 12 - Equivalent find similar results on fast and slow
ok 13 - Fast and broken do not give equivalent results
ok 14 - Reweighting broken graph
ok 15 - Now we have equivalence
1..15
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'depth' => 0,
                 'auto_reweight' => 0,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'START_ENERGY' => 100,
                 'neighbors' => {},
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1
               }, 'Search::ContextGraph' );
$VAR2 = 'Created graph object';
$VAR1 = 1;
$VAR2 = 'Reweighted graph';
$VAR1 = 2;
$VAR2 = 2;
$VAR3 = 'Same number of results';
$VAR1 = bless( {
                 'max_depth' => 100000000,
                 'depth' => 0,
                 'auto_reweight' => 1,
                 'COLLECT_THRESHOLD' => '0.2',
                 'use_global_weights' => 1,
                 'START_ENERGY' => 100,
                 'neighbors' => {},
                 'debug' => 0,
                 'ACTIVATE_THRESHOLD' => 1
               }, 'Search::ContextGraph' );
$VAR2 = 'Created graph object';
$VAR1 = 1;
$VAR2 = 'Reweighted graph';
$VAR1 = 1;
$VAR2 = 1;
$VAR3 = 'Updated correctly';
$VAR1 = 1;
$VAR2 = 1;
$VAR3 = 'Doc count remained constant for feet';
$VAR1 = 1;
$VAR2 = 1;
$VAR3 = 'Doc count remained constant for sex';
$VAR1 = 1;
$VAR2 = 1;
$VAR3 = 'Doc count remained constant for garlic';
$VAR1 = 1;
$VAR2 = 1;
$VAR3 = 'Doc count rose for \'ants\'';
$VAR1 = 1;
$VAR2 = 'update for nonexistent doc returned undef';
$VAR1 = 34;
$VAR2 = 34;
$VAR3 = 'Doc count remained the same';
$VAR1 = 0;
$VAR2 = 0;
$VAR3 = 'Term node did not get inserted';
